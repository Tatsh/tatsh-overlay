From 75be75e30c196894fb4b29eaac02a7610915d230 Mon Sep 17 00:00:00 2001
From: Bram Verweij <amverweij@gmail.com>
Date: Thu, 18 May 2023 09:59:43 +0200
Subject: [PATCH] Revert "Vulkan fastforward: Check the current presentation
 mode instead of the Vsync setting."

This reverts commit 42ce6197053ad0728ed32ce6107b17c0b80d6488.
---
 Common/GPU/D3D11/thin3d_d3d11.cpp   |  4 ----
 Common/GPU/D3D9/thin3d_d3d9.cpp     |  4 ----
 Common/GPU/OpenGL/thin3d_gl.cpp     |  5 -----
 Common/GPU/Vulkan/thin3d_vulkan.cpp | 10 ----------
 Common/GPU/thin3d.h                 |  9 ---------
 Core/HLE/sceDisplay.cpp             |  6 +-----
 6 files changed, 1 insertion(+), 37 deletions(-)

diff --git a/Common/GPU/D3D11/thin3d_d3d11.cpp b/Common/GPU/D3D11/thin3d_d3d11.cpp
index 4a90c318c..58d5a5939 100644
--- a/Common/GPU/D3D11/thin3d_d3d11.cpp
+++ b/Common/GPU/D3D11/thin3d_d3d11.cpp
@@ -75,10 +75,6 @@ class D3D11DrawContext : public DrawContext {
 		return (uint32_t)ShaderLanguage::HLSL_D3D11;
 	}
 	uint32_t GetDataFormatSupport(DataFormat fmt) const override;
-	PresentationMode GetPresentationMode() const override {
-		// TODO: Fix. Not yet used.
-		return PresentationMode::FIFO;
-	}
 
 	InputLayout *CreateInputLayout(const InputLayoutDesc &desc) override;
 	DepthStencilState *CreateDepthStencilState(const DepthStencilStateDesc &desc) override;
diff --git a/Common/GPU/D3D9/thin3d_d3d9.cpp b/Common/GPU/D3D9/thin3d_d3d9.cpp
index 32152c698..5257f2199 100644
--- a/Common/GPU/D3D9/thin3d_d3d9.cpp
+++ b/Common/GPU/D3D9/thin3d_d3d9.cpp
@@ -514,10 +514,6 @@ class D3D9Context : public DrawContext {
 		return (uint32_t)ShaderLanguage::HLSL_D3D9;
 	}
 	uint32_t GetDataFormatSupport(DataFormat fmt) const override;
-	PresentationMode GetPresentationMode() const override {
-		// TODO: Fix. Not yet used.
-		return PresentationMode::FIFO;
-	}
 
 	ShaderModule *CreateShaderModule(ShaderStage stage, ShaderLanguage language, const uint8_t *data, size_t dataSize, const char *tag) override;
 	DepthStencilState *CreateDepthStencilState(const DepthStencilStateDesc &desc) override;
diff --git a/Common/GPU/OpenGL/thin3d_gl.cpp b/Common/GPU/OpenGL/thin3d_gl.cpp
index 926bd78ae..d011b8cd5 100644
--- a/Common/GPU/OpenGL/thin3d_gl.cpp
+++ b/Common/GPU/OpenGL/thin3d_gl.cpp
@@ -349,11 +349,6 @@ class OpenGLContext : public DrawContext {
 		renderManager_.SetErrorCallback(callback, userdata);
 	}
 
-	PresentationMode GetPresentationMode() const override {
-		// TODO: Fix. Not yet used.
-		return PresentationMode::FIFO;
-	}
-
 	DepthStencilState *CreateDepthStencilState(const DepthStencilStateDesc &desc) override;
 	BlendState *CreateBlendState(const BlendStateDesc &desc) override;
 	SamplerState *CreateSamplerState(const SamplerStateDesc &desc) override;
diff --git a/Common/GPU/Vulkan/thin3d_vulkan.cpp b/Common/GPU/Vulkan/thin3d_vulkan.cpp
index 45601416e..981e4caf5 100644
--- a/Common/GPU/Vulkan/thin3d_vulkan.cpp
+++ b/Common/GPU/Vulkan/thin3d_vulkan.cpp
@@ -398,16 +398,6 @@ class VKContext : public DrawContext {
 	}
 	uint32_t GetDataFormatSupport(DataFormat fmt) const override;
 
-	PresentationMode GetPresentationMode() const override {
-		switch (vulkan_->GetPresentMode()) {
-		case VK_PRESENT_MODE_FIFO_KHR: return PresentationMode::FIFO;
-		case VK_PRESENT_MODE_FIFO_RELAXED_KHR: return PresentationMode::FIFO_RELAXED;
-		case VK_PRESENT_MODE_IMMEDIATE_KHR: return PresentationMode::IMMEDIATE;
-		case VK_PRESENT_MODE_MAILBOX_KHR: return PresentationMode::MAILBOX;
-		default: return PresentationMode::FIFO;
-		}
-	}
-
 	DepthStencilState *CreateDepthStencilState(const DepthStencilStateDesc &desc) override;
 	BlendState *CreateBlendState(const BlendStateDesc &desc) override;
 	InputLayout *CreateInputLayout(const InputLayoutDesc &desc) override;
diff --git a/Common/GPU/thin3d.h b/Common/GPU/thin3d.h
index 26f63c980..86e99179f 100644
--- a/Common/GPU/thin3d.h
+++ b/Common/GPU/thin3d.h
@@ -653,13 +653,6 @@ enum class DebugFlags {
 };
 ENUM_CLASS_BITOPS(DebugFlags);
 
-enum class PresentationMode {
-	FIFO,
-	FIFO_RELAXED,
-	IMMEDIATE,
-	MAILBOX,
-};
-
 class DrawContext {
 public:
 	virtual ~DrawContext();
@@ -674,8 +667,6 @@ class DrawContext {
 	virtual std::vector<std::string> GetExtensionList() const { return std::vector<std::string>(); }
 	virtual std::vector<std::string> GetDeviceList() const { return std::vector<std::string>(); }
 
-	virtual PresentationMode GetPresentationMode() const = 0;
-
 	// Describes the primary shader language that this implementation prefers.
 	const ShaderLanguageDesc &GetShaderLanguageDesc() {
 		return shaderLanguageDesc_;
diff --git a/Core/HLE/sceDisplay.cpp b/Core/HLE/sceDisplay.cpp
index 3ad5060da..3b85701a8 100644
--- a/Core/HLE/sceDisplay.cpp
+++ b/Core/HLE/sceDisplay.cpp
@@ -546,12 +546,8 @@ void __DisplayFlip(int cyclesLate) {
 	bool duplicateFrames = g_Config.bRenderDuplicateFrames && g_Config.iFrameSkip == 0;
 
 	bool fastForwardSkipFlip = g_Config.iFastForwardMode != (int)FastForwardMode::CONTINUOUS;
-
-	bool fifo = gpu && gpu->GetDrawContext() && gpu->GetDrawContext()->GetPresentationMode() == Draw::PresentationMode::FIFO;
-
-	if (fifo && GetGPUBackend() == GPUBackend::VULKAN) {
+	if (g_Config.bVSync && GetGPUBackend() == GPUBackend::VULKAN) {
 		// Vulkan doesn't support the interval setting, so we force skipping the flip.
-		// TODO: We'll clean this up in a more backend-independent way later.
 		fastForwardSkipFlip = true;
 	}
 
-- 
2.39.2

